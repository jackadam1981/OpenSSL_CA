# OpenSSL root CA configuration file.
# v1
[ ca ]
# `man ca`
default_ca = CA_default
[ CA_default ]
# Directory and file locations.
base_dir = /storage/build/firefox-send
certs = $base_dir/PowerCA/certs
crl_dir = $base_dir/PowerCA/crl
new_certs_dir = $base_dir/PowerCA/newcerts
database = $base_dir/PowerCA/db/index
serial = $base_dir/PowerCA/db/serial
RANDFILE = $base_dir/PowerCA/private/random
# The root key and root certificate.
private_key = $base_dir/PowerCA/PowerCA.key
certificate = $base_dir/PowerCA/PowerCA.crt
# For certificate revocation lists.
crlnumber = $base_dir/PowerCA/db/crlnumber
crl = $base_dir/PowerCA/crl/PowerCA.crl.pem
crl_extensions = crl_ext
default_crl_days = 30
# SHA-1 is deprecated, so use SHA-2 instead.
default_md = sha256
name_opt = ca_default
cert_opt = ca_default
default_days = 3750
copy_extensions = copy
preserve = no
policy = policy_loose
[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName = optional
stateOrProvinceName = optional
localityName = optional
organizationName = optional
organizationalUnitName = optional
commonName = supplied
emailAddress = optional
[ req ]
# Options for the `req` tool (`man req`).
# Optionally, specify some defaults.
prompt = no
input_password = 123456
default_bits = 2048
distinguished_name = req_distinguished_name
string_mask = utf8only
# SHA-1 is deprecated, so use SHA-2 instead.
default_md = sha256
# Extension to add when the -x509 option is used.
# make sure use x509_extensions, do not use req_extensions.
x509_extensions = v3_ca
# use the req_extensions not work.
#req_extensions = v3_ca
[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
# countryName                     = Country Name (2 letter code)
# countryName_default             = CN
# countryName_min                 = 2
# countryName_max                 = 2
# stateOrProvinceName             = State or Province Name (full name) ## Print this message
# stateOrProvinceName_default     = HeNan ## This is the default value
# localityName                    = Locality Name (eg, city) ## Print this message
# localityName_default            = ZhengZhou ## This is the default value
# 0.organizationName              = Organization Name (eg, company) ## Print this message
# 0.organizationName_default      = FreeNet ## This is the default value
# organizationalUnitName          = Organizational Unit Name (eg, section) ## Print this message
# organizationalUnitName_default  = Admin ## This is the default value
# commonName                      = Common Name (eg, your name or your server hostname) ## Print this message
# commonName_default              = CA ## This is the default value
# commonName_max                  = 64
# emailAddress                    = Email Address ## Print this message
# emailAddress_default            = jackadam@sina.com  ## This is the default value
# emailAddress_max                = 64
[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign
[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign
[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection
[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier=keyid:always
[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning